# Numbers aren't being read as numeric
cl4 = which( colnames(CD69df)=="CD4_pct" )
#Fixing the CD69 data that Genevieve gave me
#empty strings need to be filled with NA
CD69df = read.csv("~/my.work/PhD/Homestatic Expansion Project/T cell Activation Summary_Jon.csv", header = FALSE, na.strings=c("","NA"))
#has a weird first row with one entry saying "CD69.Data.Summary", so I'm removing it, and the row with names
CD69df = CD69df[-(1:2),]
#Removing an empty column
CD69df[[15]] = NULL
# Using actual row names now
colnames(CD69df) <- c("PerformedBy", "Date", "Notebook", "Page", "Mouse Tag",
"TissuesUsed", "TubeNumbers", "Genotype", "Age", "Notes",
"CD4_pct", "CD8_pct", "CD4CD69_pct", "CD8CD69_pct",
"CD4CD44CD62L_pct", "CD8CD44CD62L_pct")
#Now removing the rows that have empty data under the CD4_pct column
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
CD69df = completeFun(CD69df, "CD4_pct")
# Numbers aren't being read as numeric
cl4 = which( colnames(CD69df)=="CD4_pct" )
cl4
colnames(CD69df)
a = colnames(CD69df)
a[-1]
ncol(CD69)
ncol(CD69df)
CD69df[cl4:ncol(CD69df)] = lapply(CD69df[cl4:ncol(CD69df)], as.numeric)
ggplot(data=CD69df, aes(x=Age, y=CD4CD69_pct)) +
geom_point(position = position_dodge(width = 0.8), aes(color = Genotype))
library(ggplot2)
ggplot(data=CD69df, aes(x=Age, y=CD4CD69_pct)) +
geom_point(position = position_dodge(width = 0.8), aes(color = Genotype))
CD69df$CD4CD69_pct
View(CD69df)
#Fixing the CD69 data that Genevieve gave me
#empty strings need to be filled with NA
CD69df = read.csv("~/my.work/PhD/Homestatic Expansion Project/T cell Activation Summary_Jon.csv", header = FALSE, na.strings=c("","NA"))
#has a weird first row with one entry saying "CD69.Data.Summary", so I'm removing it, and the row with names
CD69df = CD69df[-(1:2),]
#Removing an empty column
CD69df[[15]] = NULL
# Using actual row names now
colnames(CD69df) <- c("PerformedBy", "Date", "Notebook", "Page", "Mouse Tag",
"TissuesUsed", "TubeNumbers", "Genotype", "Age", "Notes",
"CD4_pct", "CD8_pct", "CD4CD69_pct", "CD8CD69_pct",
"CD4CD44CD62L_pct", "CD8CD44CD62L_pct")
#Now removing the rows that have empty data under the CD4_pct column
completeFun <- function(data, desiredCols) {
completeVec <- complete.cases(data[, desiredCols])
return(data[completeVec, ])
}
CD69df = completeFun(CD69df, "CD4_pct")
View(CD69df)
ggplot(data=CD69df, aes(x=Age, y=CD4CD69_pct)) +
geom_point(position = position_dodge(width = 0.8), aes(color = Genotype))
cd9 = readxl::("~/my.work/PhD/Homestatic Expansion Project/T cell Activation Summary_Jon.csv")
cd9 = readxl::"~/my.work/PhD/Homestatic Expansion Project/T cell Activation Summary_Jon.csv"
ggplot(data=CD69df, aes(x=Age, y=CD4CD69_pct)) +
geom_point(aes(color = Genotype))
class(CD69df$CD4CD69_pct)
CD69df[cl4:ncol(CD69df)] = lapply(CD69df[cl4:ncol(CD69df)], as.character)
CD69df[cl4:ncol(CD69df)] = lapply(CD69df[cl4:ncol(CD69df)], as.numeric)
ggplot(data=CD69df, aes(x=Age, y=CD4CD69_pct)) +
geom_point(position = position_dodge(width = 0.8), aes(color = Genotype))
class(CD69df$Genotype)
# Replacing the IL-2 HET with WT
CD69df$Genotype[CD69df$Genotype == "IL-2-HET"] = WT
# Replacing the IL-2 HET with WT
CD69df$Genotype[CD69df$Genotype == "IL-2-HET"] = "WT"
ggplot(data=CD69df, aes(x=Age, y=CD4CD69_pct)) +
geom_point(position = position_dodge(width = 0.8), aes(color = Genotype))
#Now to get the error bars
cd4cd69 <- summarySE(CD69df, measurevar="CD4CD69_pct", groupvars=c("Age","Genotype"))
install.packages('Rmisc', dependencies = TRUE)
#Now to get the error bars
library("Rmisc")
cd4cd69 <- summarySE(CD69df, measurevar="CD4CD69_pct", groupvars=c("Age","Genotype"))
View(cd4cd69)
#Replacing the NA's produced by day 1's
cd4cd69[is.na(cd4cd69)] = 0
View(cd4cd69)
cd4cd69
ggplot(cd4cd69, aes(x=Age, y=CD4CD69_pct, colour=Genotype, group=Genotype)) +
geom_errorbar(aes(ymin=len-ci, ymax=len+ci), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3)
#Positional Dodge
pd <- position_dodge(0.1)
ggplot(cd4cd69, aes(x=Age, y=CD4CD69_pct, colour=Genotype, group=Genotype)) +
geom_errorbar(aes(ymin=len-ci, ymax=len+ci), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3)
cd4cd69
ggplot(cd4cd69, aes(x=Age, y=CD4CD69_pct, colour=Genotype, group=Genotype)) +
geom_errorbar(aes(ymin=CD4CD69_pct-ci, ymax=CD4CD69_pct+ci), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3)
ggplot(data=CD69df, aes(x=Age, y=CD4CD69_pct)) +
geom_point(position = position_dodge(width = 0.8), aes(color = Genotype))
#####################
#Now with Error Bars#
#####################
#Guide I am using - http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
#Now to get the error bars
library("Rmisc")
cd4cd69 <- summarySE(CD69df, measurevar="CD4CD69_pct", groupvars=c("Age","Genotype"))
#Replacing the NA's produced by day 1's
cd4cd69[is.na(cd4cd69)] = 0
#Positional Dodge
pd <- position_dodge(0.1)
ggplot(cd4cd69, aes(x=Age, y=CD4CD69_pct, colour=Genotype, group=Genotype)) +
geom_errorbar(aes(ymin=CD4CD69_pct-ci, ymax=CD4CD69_pct+ci), colour="black", width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3)
library(MASS)
birthwt
?birthwt
summary(aov(bwt~.,birthwt))
summary(aov(bwt~factor(race)*factor(smoke)*factor(ui)))
summary(aov(bwt~.,birthwt))
summary(aov(bwt~factor(race)*factor(smoke)*factor(ui), birthwt))
boxplot(bwt~race, range = 0)
boxplot(bwt~race, range = 0, data = birthwt)
boxplot(bwt~ui, range = 0, data = birthwt)
boxplot(bwt~smoke, range = 0, data = birthwt)
#None of the two-way or three-way results are significant at the 95% probability
?birthwt
boxplot(bwt~race, range = 0, data = birthwt,
main = "Birth Weight vs Race",
ylab = "Birth Weight in Grams",
names=c("White", "Black", "Other"))
boxplot(bwt~race, range = 0, data = birthwt,
main = "Birth Weight vs Race",
ylab = "Birth Weight in Grams",
xlab = "Race",
names=c("White", "Black", "Other"))
boxplot(bwt~ui, range = 0, data = birthwt,
main = "Birth Weight vs. Presence of Uterine Irritability")
boxplot(bwt~ui, range = 0, data = birthwt,
main = "Birth Weight vs. Presence of Uterine Irritability",
ylab = "Birth Weight in Grams",
xlab = "Precense of Uterine Irritability",
names = c("No", "Yes"))
boxplot(bwt~smoke, range = 0, data = birthwt,
main = "Birth Weight vs. Smoking",
ylab = "Birth Weight in Grams",
xlab = "Smoking status during pregnancy",
names = c("No", "Yes"))
boxplot(bwt~race, range = 0, data = birthwt,
main = "Birth Weight vs. Race",
ylab = "Birth Weight in Grams",
xlab = "Race",
names=c("White", "Black", "Other"))
boxplot(bwt~ui, range = 0, data = birthwt,
main = "Birth Weight vs. Uterine Irritability",
ylab = "Birth Weight in Grams",
xlab = "Precense of Uterine Irritability",
names = c("No", "Yes"))
boxplot(bwt~smoke, range = 0, data = birthwt,
main = "Birth Weight vs. Smoking",
ylab = "Birth Weight in Grams",
xlab = "Smoking status during pregnancy",
names = c("No", "Yes"))
hist(CO2$uptake/CO2$conc)
hist(CO2$uptake/CO2$conc, breaks = 50)
?wilcox.test
