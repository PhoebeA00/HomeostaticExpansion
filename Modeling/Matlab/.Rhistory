View(WLS)
#Parental Income
hist(WLS$pi5760)
WLS$Adj.Inc.57.log = log(WLS$Adj.Inc.57)
hist(WLS$Adj.Inc.57.log)
#Parental Income
hist(WLS$pi5760)
poorParents = subset(WLS, pi5760 <= 45)
mediumParents = subset(WLS, pi5760 > 45)
mediumParents = subset(WLS, pi5760 > 45 & pi5760 <= 100)
richParents = subset(WLS, pi5760 > 100)
hist(poorParents$ix011rec)
hist(mediumParents$ix011rec)
hist(poorParents$ix011rec)
hist(mediumParents$ix011rec)
hist(richParents$ix011rec)
hist(poorParents$ix011rec)
hist(mediumParents$ix011rec)
hist(richParents$ix011rec)
t.test(poorParents$ix011rec, richParents$ix011rec)
t.test(poorParents$ix011rec, richParents$ix011rec, alternative = "greater")
hist(poorParents$ix011rec)
hist(richParents$ix011rec)
?t.test()
View(mtcars)
FourCyl <- subset(mtcars, cyl == 4)
EightCyl <- subset(mtcars, cyl == 8)
View(EightCyl)
View(FourCyl)
t.test(EightCyl$qsec, FourCyl$qsec, alternative = "less", conf.level = 0.95 )
binom.test(8, 25, p = 0.2, alternative = "greater", conf.level = 0.95)
binom.test(8, 25, p = 0.2, alternative = "greater", conf.level = 0.99)
C
t.test(EightCyl$qsec, FourCyl$qsec, alternative = "less", conf.level = 0.95 )
t.test(Versicolor$Sepal.Length, mu = 6.1, alternative = "less", conf.level = 0.99)
Versicolor = subset(iris, Species == "versicolor")
t.test(Versicolor$Sepal.Length, mu = 6.1, alternative = "less", conf.level = 0.99)
? binom.test
#Question 4
?binom.test()
WLS <- read.csv("~/my.work/TAing/Math015/Spring2021/WLS (1).csv")
#WLS <- read.csv("WLS.csv")
#summary(WLS$hr100rpc)
#saving networth elsewhere
networth <- WLS$hr100rpc
#replace all the negatives with NA
WLS[WLS < 0] <- NA
#replaces all values greater than 8999 with NA
#summary(WLS$deatyr)
WLS$deatyr[WLS$deatyr > 8999] <- NA
#bringing back the networth
WLS$hr100rpc <-networth
WLS$Adj.Cog.92 =  WLS$ri001re / 16 #Cognition for 1992
WLS$Adj.Cog.03 = WLS$gi101re / 12 #Cognition for 2003
WLS$Adj.Cog.11 = WLS$hi101re / 12 #Cognition for 2011
WLS$Adj.Inc.57 = (WLS$pi5760 * 8) / 10 # Parents income for 1957 in thousands of dollars
WLS$Adj.NetW.11 = (WLS$hr100rpc) / 1000 #Net worth for 2011 in thousands of dollars
WLS$Adj.NetW.11.log = log(WLS$Adj.NetW.11 + 11.89) #2011 Networth for in log form
WLS$Adj.Inc.57.log = log(WLS$Adj.Inc.57)
?prop.test()
Associates = subset(WLS, dglev == 1)
Bachelors = subset(WLS, dglev == 2)
AssociatesDebt = subset(WLS, hr100rpc < 0)
AssociatesDebt = subset(Associates, hr100rpc < 0) #128
BachelorsDebt = subset(Bachelors, hr100rpc < 0) #
prop.test(x=c(2, 11), n = c(154,1441), conf.level = 0.95)
prop.test(x=c(2, 11), n = c(154,1441), conf.level = 0.99)
subset(iris, Species == "versicolor")
prop.test(x=c(2, 11), n = c(154,1441), conf.level = 0.95)
prop.test(x=c(2, 11), n = c(154,1441), conf.level = 0.95)
prop.test(x=c(2, 11), n = c(154,1441), conf.level = 0.99)
poorParents = subset(WLS, pi5760 <= 45)
mediumParents = subset(WLS, pi5760 > 45 & pi5760 <= 100)
richParents = subset(WLS, pi5760 > 100)
#Cog Score
hist(poorParents$Adj.Cog.92)
hist(mediumParents$Adj.Cog.92)
hist(richParents$Adj.Cog.92)
t.test(poorParents$Adj.Cog.92, richParents$ix011rec, alternative = "less")
poorParents = subset(WLS, Adj.Inc.57 <= 45)
mediumParents = subset(WLS, Adj.Inc.57 > 45 & Adj.Inc.57 <= 100)
richParents = subset(WLS, Adj.Inc.57 > 100)
hist(poorParents$ix011rec)
hist(mediumParents$ix011rec)
hist(richParents$ix011rec)
#Cog Score
#Skew
hist(poorParents$Adj.Cog.92)
hist(mediumParents$Adj.Cog.92)
hist(richParents$Adj.Cog.92)
smoothScatter(poorParents$Adj.Inc.57, poorParents$Adj.NetW.11)
smoothScatter(poorParents$Adj.Inc.57.log, poorParents$Adj.NetW.11.log)
#Marriages
hist(WLS$hc003re)
ZeroMarriages = subset(WLS, hc003re == 0)
#Let's see if they have kids
hist(ZeroMarriages$hd201kd)
ZeroMarriages6Kids = subset(ZeroMarriages, hd201kd >= 6 )
View(ZeroMarriages6Kids)
ThreeMarriages = subset(WLS, hc003re == 3)
hist(ThreeMarriages$hd201kd)
OneMarriages = subset(WLS, hc003re == 1)
hist(OneMarriages$hd201kd)
hist(ThreeMarriages$Adj.Inc.57)
hist(OneMarriages$Adj.Inc.57)
t.test(ThreeMarriages$Adj.Inc.57, OneMarriages$Adj.Inc.57 )
t.test(ThreeMarriages$hd201kd, OneMarriages$hd201kd)
hist(ThreeMarriages$hd201kd)
hist(OneMarriages$hd201kd)
View(mtcars)
8cyl = subset(mtcars, cyl == 8)
cyl8 = subset(mtcars, cyl == 8)
cyl4 = subset(mtcars, cyl == 4)
View(cyl4)
?t.test()
t.test(cyl8$qsec, cyl4$qsec, alternative = "less", conf.level = 0.95 )
3. t.test(Sepal length data of versicolor, mu = , alternative = "" )
t.test(Sepal length data of versicolor, mu = , alternative = "" )
a = c(15.7, 15.7, 15.8, 15.5, 15.95, 15.85, 15.55, 15.5, 15.6, 15.55, 15.55, 15.75, 15.8, 15.65, 15.5, 15.5)
t.test(a, conf.level=0.95, mu=15.7)
?binom.test
Associates = subset(WLS, dglev == 1) #154
View(WLS)
Associates = subset(WLS, dglev == 1)
WLS <- read.csv("~/my.work/TAing/Math015/Spring2021/WLS (1).csv")
#WLS <- read.csv("WLS.csv")
#summary(WLS$hr100rpc)
#saving networth elsewhere
networth <- WLS$hr100rpc
#replace all the negatives with NA
WLS[WLS < 0] <- NA
#replaces all values greater than 8999 with NA
#summary(WLS$deatyr)
WLS$deatyr[WLS$deatyr > 8999] <- NA
#bringing back the networth
WLS$hr100rpc <-networth
WLS$Adj.Cog.92 =  WLS$ri001re / 16 #Cognition for 1992
WLS$Adj.Cog.03 = WLS$gi101re / 12 #Cognition for 2003
WLS$Adj.Cog.11 = WLS$hi101re / 12 #Cognition for 2011
WLS$Adj.Inc.57 = (WLS$pi5760 * 8) / 10 # Parents income for 1957 in thousands of dollars
WLS$Adj.NetW.11 = (WLS$hr100rpc) / 1000 #Net worth for 2011 in thousands of dollars
WLS$Adj.NetW.11.log = log(WLS$Adj.NetW.11 + 11.89) #2011 Networth for in log form
WLS$Adj.Inc.57.log = log(WLS$Adj.Inc.57)
Associates = subset(WLS, dglev == 1)
Bachelors = subset(WLS, dglev == 2)
?prop.test()
#Debt
Debt_A = subset(Associates, Adj.NetW.11 < 0)
Debt_B = subset(Bachelors, Adj.NetW.11 < 0)
prop.test(c(2, 11), c(154, 1441), conf.level = 0.95)
prop.test(c(2, 11), c(154, 1441), conf.level = 0.99)
WLS <- read.csv("~/my.work/TAing/Math015/Spring2021/WLS (1).csv")
WLS <- read.csv("~/my.work/TAing/Math015/Spring2021/WLS (1).csv")
#WLS <- read.csv("WLS.csv")
#summary(WLS$hr100rpc)
#saving networth elsewhere
networth <- WLS$hr100rpc
#replace all the negatives with NA
WLS[WLS < 0] <- NA
#replaces all values greater than 8999 with NA
#summary(WLS$deatyr)
WLS$deatyr[WLS$deatyr > 8999] <- NA
#bringing back the networth
WLS$hr100rpc <-networth
WLS$Adj.Cog.92 =  WLS$ri001re / 16 #Cognition for 1992
WLS$Adj.Cog.03 = WLS$gi101re / 12 #Cognition for 2003
WLS$Adj.Cog.11 = WLS$hi101re / 12 #Cognition for 2011
WLS$Adj.Inc.57 = (WLS$pi5760 * 8) / 10 # Parents income for 1957 in thousands of dollars
WLS$Adj.NetW.11 = (WLS$hr100rpc) / 1000 #Net worth for 2011 in thousands of dollars
WLS$Adj.NetW.11.log = log(WLS$Adj.NetW.11 + 11.89) #2011 Networth for in log form
WLS$Adj.Inc.57.log = log(WLS$Adj.Inc.57)
#Low vs High BMI
LowBMI = subset(WLS, ix011rec <= 25)
MedBMI = subset(WLS, ix011rec > 25 & ix011rec <= 29)
HighBMI = subset(WLS, ix011rec > 29)
boxplot(ix011rec~ix007rer, data = LowBMI, main = "low" )
boxplot(ix011rec~ix007rer, data = MedBMI, main = "med" )
boxplot(ix011rec~ix007rer, data = HighBMI, main = "High" )
boxplot(ix011rec~ix007rer, data = LowBMI, main = "low" )
boxplot(ix011rec~ix007rer, data = MedBMI, main = "med" )
boxplot(ix011rec~ix007rer, data = HighBMI, main = "High" )
WLS <- read.csv("~/my.work/TAing/Math015/Spring2021/WLS (1).csv")
#WLS <- read.csv("WLS.csv")
#summary(WLS$hr100rpc)
#saving networth elsewhere
networth <- WLS$hr100rpc
#replace all the negatives with NA
WLS[WLS < 0] <- NA
#replaces all values greater than 8999 with NA
#summary(WLS$deatyr)
WLS$deatyr[WLS$deatyr > 8999] <- NA
#bringing back the networth
WLS$hr100rpc <-networth
WLS$Adj.Cog.92 =  WLS$ri001re / 16 #Cognition for 1992
WLS$Adj.Cog.03 = WLS$gi101re / 12 #Cognition for 2003
WLS$Adj.Cog.11 = WLS$hi101re / 12 #Cognition for 2011
WLS$Adj.Inc.57 = (WLS$pi5760 * 8) / 10 # Parents income for 1957 in thousands of dollars
WLS$Adj.NetW.11 = (WLS$hr100rpc) / 1000 #Net worth for 2011 in thousands of dollars
WLS$Adj.NetW.11.log = log(WLS$Adj.NetW.11 + 11.89) #2011 Networth for in log form
WLS$Adj.Inc.57.log = log(WLS$Adj.Inc.57)
#Low vs High BMI
LowBMI = subset(WLS, ix011rec <= 25)
MedBMI = subset(WLS, ix011rec > 25 & ix011rec <= 29)
HighBMI = subset(WLS, ix011rec > 29)
boxplot(ix011rec~ix007rer, data = LowBMI, main = "low" )
boxplot(ix011rec~ix007rer, data = MedBMI, main = "med" )
boxplot(ix011rec~ix007rer, data = HighBMI, main = "High" )
hist(WLS$ix011rec)
plot(HighBMI$ix011rec, HighBMI$ix007rer,
ylim = c(0,100), xlim = c(19, 45),
xlab = "BMI",
ylab = "Sick")
points(MedBMI$ix011rec, MedBMI$ix007rer, col = "blue")
points(LowBMI$ix011rec, LowBMI$ix007rer, col = "red")
plot(HighBMI$ix011rec, HighBMI$ix007rer,
ylim = c(0,100),
xlab = "BMI",
ylab = "Sick")
points(MedBMI$ix011rec, MedBMI$ix007rer, col = "blue")
points(LowBMI$ix011rec, LowBMI$ix007rer, col = "red")
plot(HighBMI$ix011rec, HighBMI$ix007rer,
ylim = c(0,100),
xlab = "BMI",
ylab = "Sick")
points(MedBMI$ix011rec, MedBMI$ix007rer, col = "blue")
points(LowBMI$ix011rec, LowBMI$ix007rer, col = "red")
boxplot(ix011rec~ix007rer, data = LowBMI, main = "low" )
boxplot(ix011rec~ix007rer, data = HighBMI, main = "High" )
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
library(scales)
#removing an outlier, Day 0, and Day 56
TregData = subset(pop, X4TregCT < 1 & intage > 0 & intage < 50)
pop = read.csv("~/my.work/PhD/HomestaticExpansionProject/ModelData/AfterCalculations.csv")
#removing an outlier, Day 0, and Day 56
TregData = subset(pop, X4TregCT < 1 & intage > 0 & intage < 50)
TregData$X4TregCT = TregData$X4TregCT *10**6
ggplot(TregData, aes(intage, X4TregCT, shape = Genotype)) +
geom_point(position = position_dodge(1), size = 4)+
scale_x_continuous(breaks = seq(4,18,2))+
scale_y_continuous(breaks = seq(0,max(TregData$X4TregCT), length.out =5),
labels = scientific_format(digits = 2))+
labs(titles = "Treg Total count", x = "Age in Days", y = "CD4+Foxp3+TCRbeta_high Count ")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 18),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
stat_summary(aes(group=Genotype, color = Genotype), fun.y=mean, geom="line")
library(tidyr)
library(ggplot2)
popActiv = read.csv('~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab/RawData/ActivatedWTSpleen.csv')
popTregs2 = subset(popActiv, select = c("Age", "X4TregProlCT", "NaiveDerivedTregsCT", "ThymicDerivedTregsCT", "X4TregCT"))
popTregs2$X4TregProlCT = popTregs2$X4TregProlCT * 10**6
longpopTregs2 = gather(popTregs2, variable, value, -Age)
ggplot(longpopTregs2, aes(x = Age, y = value, color = variable)) +
geom_point(position = position_dodge(1), size = 2)+
stat_summary(aes(group=variable, color = variable), fun.y=mean, geom="line")+
labs(titles = "Different WT Treg sources", x = "Age in Days", y = "Treg counts")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 20),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
ylim(0, 1100000)
library(tidyr)
library(ggplot2)
popActiv = read.csv('~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab/RawData/ActivatedWTSpleen.csv')
popTregs2 = subset(popActiv, select = c("Age", "X4TregProlCT", "NaiveDerivedTregsCT", "ThymicDerivedTregsCT", "X4TregCT"))
popTregs2$X4TregProlCT = popTregs2$X4TregProlCT * 10**6
#Prepare data fro ggplot
longpopTregs2 = gather(popTregs2, variable, value, -Age)
ggplot(longpopTregs2, aes(x = Age, y = value, color = variable)) +
geom_point(position = position_dodge(1), size = 2)+
stat_summary(aes(group=variable, color = variable), fun.y=mean, geom="line")+
labs(titles = "Different WT Treg sources", x = "Age in Days", y = "Treg counts")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 20),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
ylim(0, 1100000)
popActivKO = read.csv('~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab/RawData/ActivatedKOSpleen.csv')
popTregsKO = subset(popActivKO, select = c("Age", "X4TregProlCT", "NaiveDerivedTregsCT", "ThymicDerivedTregsCT", "X4TregCT"))
popTregsKO$X4TregProlCT = popTregsKO$X4TregProlCT * 10**6
#Prepare data fro ggplot
longpopTregsKO = gather(popTregsKO, variable, value, -Age)
ggplot(longpopTregsKO, aes(x = Age, y = value, color = variable)) +
geom_point(position = position_dodge(1), size = 2)+
stat_summary(aes(group=variable, color = variable), fun.y=mean, geom="line")+
labs(titles = "Different KO Treg sources", x = "Age in Days", y = "Treg counts")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 20),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
ylim(0, 1100000)
#
# plot(popTregs2$ThymicDerivedTregsCT)
# plot(popTregsKO$ThymicDerivedTregsCT)
# plot(popTregs2$NaiveDerivedTregsCT)
# plot(popTregsKO$NaiveDerivedTregsCT)
# summary(popTregsKO$NaiveDerivedTregsCT)
plot(ActivatedWTSpleen$Thy)
ActivationData = read.csv("~/my.work/PhD/HomestaticExpansionProject/ModelData/ActivatedCD4pop.csv")
#Creating the naive T cells
ActivationData$NaiveCT = ActivationData$NoTregCD4CT - ActivationData$ActivatedCD4CT
#Saving the data to Modeldata for plotting
write.csv(ActivationData, "~/my.work/PhD/HomestaticExpansionProject/ModelData/ActivatedCD4pop.csv")
ActivationData$X4TregProlCT
ActivationData = read.csv("~/my.work/PhD/HomestaticExpansionProject/ModelData/ActivatedCD4pop.csv")
#Creating the naive T cells
ActivationData$NaiveCT = ActivationData$NoTregCD4CT - ActivationData$ActivatedCD4CT
#Saving the data to Modeldata for plotting
write.csv(ActivationData, "~/my.work/PhD/HomestaticExpansionProject/ModelData/ActivatedCD4pop.csv")
#Preparing data for fitting
ActivationData$NaiveDerivedTregsCT = ActivationData$NaiveDerivedTregsCT * 10**6
ActivationData$ThymicDerivedTregsCT = ActivationData$ThymicDerivedTregsCT * 10**6
ActivationData$NaiveCT = ActivationData$NaiveCT * 10**6
ActivationData$ActivatedCD4CT = ActivationData$ActivatedCD4CT * 10**6
ActivationData$X4TregCT = ActivationData$X4TregCT * 10**6
ActivationData$hours = ActivationData$intage * 24
ActivationData$hours[ActivationData$hours == 0] <- 1 #the 0 won't work with my matlab code
ActivationData$X4TregProlCT = ActivationData$X4TregProlCT * 10**6
#Removing Thymus for the fitting process
ActivatedWTSpleen = subset(ActivationData, Genotype == 'WT' & Organ == 'Spleen')
ActivaedKOSpleen = subset(ActivationData, Genotype == 'KO' & Organ == 'Spleen')
source('~/my.work/PhD/HomestaticExpansionProject/Code/Stats plots and data management/poCount_V2_AfterPythonScript.R')
library(tidyr)
library(ggplot2)
popActiv = read.csv('~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab/RawData/ActivatedWTSpleen.csv')
popTregs2 = subset(popActiv, select = c("Age", "X4TregProlCT", "NaiveDerivedTregsCT", "ThymicDerivedTregsCT", "X4TregCT"))
# popTregs2$X4TregProlCT = popTregs2$X4TregProlCT * 10**6
#Prepare data fro ggplot
longpopTregs2 = gather(popTregs2, variable, value, -Age)
ggplot(longpopTregs2, aes(x = Age, y = value, color = variable)) +
geom_point(position = position_dodge(1), size = 2)+
stat_summary(aes(group=variable, color = variable), fun.y=mean, geom="line")+
labs(titles = "Different WT Treg sources", x = "Age in Days", y = "Treg counts")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 20),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
ylim(0, 1100000)
popActivKO = read.csv('~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab/RawData/ActivatedKOSpleen.csv')
popTregsKO = subset(popActivKO, select = c("Age", "X4TregProlCT", "NaiveDerivedTregsCT", "ThymicDerivedTregsCT", "X4TregCT"))
# popTregsKO$X4TregProlCT = popTregsKO$X4TregProlCT * 10**6
#Prepare data fro ggplot
longpopTregsKO = gather(popTregsKO, variable, value, -Age)
ggplot(longpopTregsKO, aes(x = Age, y = value, color = variable)) +
geom_point(position = position_dodge(1), size = 2)+
stat_summary(aes(group=variable, color = variable), fun.y=mean, geom="line")+
labs(titles = "Different KO Treg sources", x = "Age in Days", y = "Treg counts")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 20),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
ylim(0, 1100000)
#
# plot(popTregs2$ThymicDerivedTregsCT)
# plot(popTregsKO$ThymicDerivedTregsCT)
# plot(popTregs2$NaiveDerivedTregsCT)
# plot(popTregsKO$NaiveDerivedTregsCT)
# summary(popTregsKO$NaiveDerivedTregsCT)
library(tidyr)
library(ggplot2)
popActiv = read.csv('~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab/RawData/ActivatedWTSpleen.csv')
popTregs2 = subset(popActiv, select = c("Age", "X4TregProlCT", "NaiveDerivedTregsCT", "ThymicDerivedTregsCT", "X4TregCT"))
#Prepare data fro ggplot
longpopTregs2 = gather(popTregs2, variable, value, -Age)
ggplot(longpopTregs2, aes(x = Age, y = value, color = variable)) +
geom_point(position = position_dodge(1), size = 2)+
stat_summary(aes(group=variable, color = variable), fun.y=mean, geom="line")+
labs(titles = "Different WT Treg sources", x = "Age in Days", y = "Treg counts")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 20),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
ylim(0, 1100000)
popActivKO = read.csv('~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab/RawData/ActivatedKOSpleen.csv')
popTregsKO = subset(popActivKO, select = c("Age", "X4TregProlCT", "NaiveDerivedTregsCT", "ThymicDerivedTregsCT", "X4TregCT"))
#Prepare data fro ggplot
longpopTregsKO = gather(popTregsKO, variable, value, -Age)
ggplot(longpopTregsKO, aes(x = Age, y = value, color = variable)) +
geom_point(position = position_dodge(1), size = 2)+
stat_summary(aes(group=variable, color = variable), fun.y=mean, geom="line")+
labs(titles = "Different KO Treg sources", x = "Age in Days", y = "Treg counts")+
theme(panel.background = element_rect(fill = "white", colour = "black", size = 2),
legend.key = element_rect(fill = "white", colour = "black"),
legend.background = (element_rect(colour= "black", fill = "white")),
axis.title.x = element_text(face="bold", colour="black", size=20),
axis.title.y = element_text(face = "bold", colour = "black", size = 20),
plot.title = element_text(lineheight=.8, face="bold", size = 20),
axis.ticks.length=unit(.25, "cm"),
text = element_text(size=20))+
ylim(0, 1100000)
#
# plot(popTregs2$ThymicDerivedTregsCT)
# plot(popTregsKO$ThymicDerivedTregsCT)
# plot(popTregs2$NaiveDerivedTregsCT)
# plot(popTregsKO$NaiveDerivedTregsCT)
# summary(popTregsKO$NaiveDerivedTregsCT)
colnames(popActivKO)
ActivationData$X4TregProlCT[ActivationData$X4TregProlCT == 0] <- #Have to get rid of that divide by zero nonsense
ActivationData$X4TregProlCT = ActivationData$X4TregProlCT * 10**6
source('~/my.work/PhD/HomestaticExpansionProject/Code/Stats plots and data management/poCount_V2_AfterPythonScript.R')
source('~/my.work/PhD/HomestaticExpansionProject/Code/Stats plots and data management/poCount_V2_AfterPythonScript.R')
source('~/my.work/PhD/HomestaticExpansionProject/Code/Stats plots and data management/poCount_V2_AfterPythonScript.R')
source('~/my.work/PhD/HomestaticExpansionProject/Code/Stats plots and data management/poCount_V2_AfterPythonScript.R')
WLS <- read.csv("~/my.work/TAing/Math015/Spring2021/WLS (1).csv")
#WLS <- read.csv("WLS.csv")
#summary(WLS$hr100rpc)
#saving networth elsewhere
networth <- WLS$hr100rpc
#replace all the negatives with NA
WLS[WLS < 0] <- NA
#replaces all values greater than 8999 with NA
#summary(WLS$deatyr)
WLS$deatyr[WLS$deatyr > 8999] <- NA
#bringing back the networth
WLS$hr100rpc <-networth
WLS$Adj.Cog.92 =  WLS$ri001re / 16 #Cognition for 1992
WLS$Adj.Cog.03 = WLS$gi101re / 12 #Cognition for 2003
WLS$Adj.Cog.11 = WLS$hi101re / 12 #Cognition for 2011
WLS$Adj.Inc.57 = (WLS$pi5760 * 8) / 10 # Parents income for 1957 in thousands of dollars
WLS$Adj.NetW.11 = (WLS$hr100rpc) / 1000 #Net worth for 2011 in thousands of dollars
WLS$Adj.NetW.11.log = log(WLS$Adj.NetW.11 + 11.89) #2011 Networth for in log form
WLS$Adj.Inc.57.log = log(WLS$Adj.Inc.57)
View(WLS)
setwd("~/my.work/PhD/HomestaticExpansionProject/Code/Modeling/Matlab")
hist(WLS$ru024rec) #1997
hist(WLS$gu024re) #2003
hist(WLS$hu024re) #2011
LowDepressed97 = subset(WLS, ru024rec >= 1 & ru024rec <= 3)
hist(LowDepressed97$gu024re) #2003
hist(LowDepressed97$hu024re)
hist(LowDepressed97$gu024re) #2003
hist(WLS$ru024rec) #1997
ReallyDepressed = subset(WLS, ru024rec >= 6 )
hist(ReallyDepressed$gu024re)
hist(ReallyDepressed$hu024re)
hist(ReallyDepressed$gu024re)
#From Really depressed to Alright in 2003
subset(ReallyDepressed, gu024re <= 2)
#From Really depressed to low depression in 2003
HightoLowDprs = subset(ReallyDepressed, gu024re <= 2)
#From Really depressed to low depression in 2003
HightoLowDprs = subset(ReallyDepressed, gu024re <= 2)
#Looking at degrees and networth
hist(HightoLowDprs$dglev)
hist(ReallyDepressed$gu024re)
hist(HightoLowDprs$hr100rpc)
hist(HightoLowDprs$hr100rpc, breaks = 40)
hist(HightoLowDprs$Adj.NetW.11.log, breaks = 40)
hist(HightoLowDprs$Adj.NetW.11.log, breaks = 40)
#Looking at degrees and networth
hist(HightoLowDprs$dglev)
HightoHighDeprs = subset(ReallyDepressed, gu024re >= 6)
hist(HightoHighDeprs$dglev)
hist(HightoLowDprs$ix007rer)
hist(HightoHighDeprs$ix007rer)
hist(HightoHighDeprs$ix007rer)
hist(HightoLowDprs$ix007rer)
hist(HightoHighDeprs$ix007rer)
hist(HightoLowDprs$ix007rer)
#Days in bed test
bedHtoL = subset(HightoLowDprs, ix007rer > 0)
bedHtoH = subset(HightoLowDprs, ix007rer > 0)
prop.test(x=c(36,36), n=c(87, 118), alternative = "greater" )
bedHtoH = subset(HightoHighDeprs, ix007rer > 0) #36
prop.test(x=c(28,36), n=c(87, 118), alternative = "greater" )
hist(HightoLowDprs$ix007rer)
hist(HightoHighDeprs$ix007rer)
hist(LowDepressed97$gu024re) #2003
hist(ReallyDepressed$gu024re)
hist(WLS$ru024rec) #1997
hist(LowDepressed97$gu024re) #2003
hist(ReallyDepressed$gu024re)
hist(LowDepressed97$gu024re) #2003
hist(ReallyDepressed$gu024re)
hist(HightoLowDprs$ix007rer)
hist(HightoHighDeprs$ix007rer)
hist(WLS$ru024rec) #1997
hist(LowDepressed97$gu024re) #2003
hist(ReallyDepressed$gu024re)
hist(ReallyDepressed$gu024re)
prop.test(x=c(28,36), n=c(87, 118), alternative = "greater" )
